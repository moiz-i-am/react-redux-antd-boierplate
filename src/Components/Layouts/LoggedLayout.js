import React from "react";
import { Link } from "react-router-dom";
import PropTypes from "prop-types";
import { Layout, Menu, Avatar, message, Drawer, Button } from "antd";
// import { useMutation } from "@apollo/react-hooks";
import { connect } from "react-redux";
import { bindActionCreators } from "redux";

import { withRouter } from "react-router";
// import { mutations } from "../../graphql/graphql";
// import actions from "../../store/actions/actions";

import "./Layouts.css";

const { SubMenu } = Menu;
const { Header, Footer, Content } = Layout;

const LoggedLayout = (props) => {
  const [visibleDrawer, setVisibleDrawer] = React.useState(false);
  // const [LogOut] = useMutation(mutations.LOG_OUT);
  console.log(visibleDrawer);
  const handleLogOut = (e) => {
    // if (e.key === "LogOut") {
    //   props.removeAuthUser();
    //   props.setFirstAuthState(false, null);
    //   props.logOut();
    //   LogOut()
    //     .then((res) => {
    //       props.history.push("/login");
    //       message.success("Logged out successfully");
    //     })
    //     .catch((err) => console.log(err));
    // }
  };
  const { location } = props.history;
  const { user } = props;

  return (
    <Layout className="layout" style={{ minHeight: "100vh" }}>
      <Header style={{ height: "unset" }}>
        <Menu
          theme="dark"
          mode="horizontal"
          defaultSelectedKeys={["/"]}
          selectedKeys={[location.pathname]}
          style={{ lineHeight: "65px" }}
        >
          <Menu.Item key="logo" className="logo-menu">
            <Link to="/">
              <div className="future-letter-svg-logo">
                <svg
                  width="190"
                  height="40"
                  viewBox="0 0 242 48"
                  fill="none"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <g clip-path="url(#clip0)">
                    <path
                      d="M193.189 6.06375L240.002 1.41676C240.516 1.36009 240.801 1.98347 240.402 2.32349L222.419 18.0212C221.848 18.5313 221.048 18.6446 220.306 18.3613L207.918 13.2042L239.088 2.15348L201.296 10.4274L193.075 7.02715C192.561 6.80047 192.675 6.12042 193.189 6.06375Z"
                      fill="white"
                    />
                    <path
                      d="M203.465 21.9882C203.636 22.8382 204.607 23.2916 205.349 22.8382L215.739 16.4344L207.918 13.2042L203.465 21.9882Z"
                      fill="#A7A9AC"
                    />
                    <path
                      d="M207.918 13.2042L239.088 2.15346L201.296 10.4274L203.465 21.9882L207.918 13.2042Z"
                      fill="#D1D3D4"
                    />
                    <path
                      d="M240.059 1.41676C240.516 1.41676 240.744 1.98347 240.402 2.32349L222.418 18.0212C222.019 18.3613 221.562 18.5313 221.105 18.5313C220.82 18.5313 220.592 18.4746 220.306 18.3613L215.796 16.4911L205.406 22.8383C205.178 22.9516 204.949 23.0083 204.778 23.0083C204.207 23.0083 203.693 22.6116 203.579 21.9882L201.41 10.4274L193.189 7.02715C192.675 6.80047 192.789 6.12042 193.36 6.06375L240.059 1.41676C240.002 1.41676 240.059 1.41676 240.059 1.41676ZM240.059 0C240.002 0 239.945 0 239.888 0L193.075 4.64699C192.218 4.76033 191.476 5.38371 191.362 6.29044C191.248 7.1405 191.705 7.99055 192.504 8.33058L200.04 11.4475L202.095 22.2715C202.323 23.5183 203.408 24.425 204.721 24.425C205.235 24.425 205.691 24.3117 206.091 24.0283L215.853 18.0212L219.735 19.608C220.135 19.778 220.592 19.8914 221.048 19.8914C221.905 19.8914 222.704 19.608 223.332 19.0413L241.315 3.40024C241.943 2.8902 242.114 2.04014 241.829 1.24675C241.6 0.510035 240.858 0 240.059 0Z"
                      fill="#05221A"
                    />
                    <path
                      d="M25.7471 22.4982L21.2942 35.3624H25.9184L25.0621 37.9693H20.4379L19.5244 40.4628C17.6976 45.6198 14.729 48 10.6757 48C8.79173 48 6.96488 47.6033 5.3093 46.5832L6.45108 44.3164C7.47868 44.8264 8.44919 45.0531 9.4197 45.0531C11.8174 45.0531 13.8156 43.4096 15.1286 39.7261L15.7566 38.0259H12.2171L13.1305 35.4191H16.67L21.9793 20.0614C18.9536 18.1912 16.042 17.3978 12.7309 17.3978C8.84881 17.3978 5.3093 20.118 4.16752 24.085C2.56903 29.582 6.05146 33.719 10.0477 33.719H10.5044L9.70515 36.1558C9.47679 36.2125 9.07717 36.2692 8.73464 36.2692C3.99625 36.1558 -2.16935 30.8854 0.742186 22.6682C2.56903 17.4545 7.47868 14.3376 13.0163 14.3376C17.8118 14.3376 22.2647 16.5478 25.005 18.5313L32.7691 24.085L31.8557 26.6352L25.7471 22.4982Z"
                      fill="#05221A"
                    />
                    <path
                      d="M50.4666 39.8961C48.0118 43.5797 43.5018 47.9433 39.6197 47.9433C37.2791 47.9433 36.5369 46.0165 37.5074 42.7863C35.1097 46.1865 32.4265 47.9433 29.8575 47.9433C27.2885 47.9433 27.2885 45.3931 27.9165 43.4663L32.1982 31.1688H36.3086L32.3123 42.6163C31.9127 43.7497 32.2552 44.2031 32.8832 44.2031C33.5112 44.2031 35.6806 43.523 39.2201 37.6859L41.5037 31.1688H45.6141L41.6178 42.7296C41.2182 43.863 41.732 44.2031 42.3029 44.2031C44.0727 44.2031 47.1555 41.5962 49.0965 38.7627L50.4666 39.8961Z"
                      fill="#05221A"
                    />
                    <path
                      d="M61.4277 39.896C58.9158 43.5796 53.4924 47.9432 49.6674 47.9432C47.2126 47.9432 46.4704 45.7331 47.7264 42.1628L50.6379 33.8323H48.1831L49.0965 31.2821H51.5513L53.7778 24.8783H57.8882L55.6047 31.1688H60.0576L59.1442 33.7189H54.6912L51.5513 42.7296C51.1517 43.863 51.6655 44.203 52.2364 44.203C54.4629 44.203 58.2878 41.2561 59.9434 38.7626L61.4277 39.896Z"
                      fill="#05221A"
                    />
                    <path
                      d="M80.6667 39.8961C78.2119 43.5797 73.7018 47.9433 69.8198 47.9433C67.4791 47.9433 66.737 46.0165 67.7075 42.7863C65.3098 46.1865 62.6266 47.9433 60.0576 47.9433C57.4886 47.9433 57.4886 45.3931 58.1166 43.4663L62.3982 31.2255H66.5086L62.5124 42.673C62.1128 43.8064 62.4553 44.2597 63.0833 44.2597C63.7113 44.2597 65.8807 43.5797 69.4202 37.7426L71.6466 31.1688H75.757L71.7608 42.7296C71.3612 43.863 71.875 44.2031 72.4459 44.2031C74.2156 44.2031 77.2984 41.5962 79.2395 38.7627L80.6667 39.8961Z"
                      fill="#05221A"
                    />
                    <path
                      d="M92.7694 34.7391C92.1986 36.4392 90.6001 38.366 88.8874 39.6128H86.8893C88.0882 38.2527 88.7161 37.2326 89.0587 36.2692C89.4583 35.0791 89.0587 34.3424 88.3736 34.3424C87.5173 34.3424 85.6904 35.1358 83.1214 39.0461L80.2099 47.3766H76.0995L81.6371 31.1688H85.7475L84.5486 34.6824C86.6038 32.0189 88.5449 30.7155 90.6572 30.7155C92.7694 30.7155 93.4545 32.5856 92.7694 34.7391Z"
                      fill="#05221A"
                    />
                    <path
                      d="M111.609 39.8961C108.754 43.9764 103.559 47.9433 98.8209 47.9433C93.3975 47.9433 91.3994 43.2396 92.9979 38.8193C94.6534 34.1157 98.6497 30.7721 103.217 30.7721C106.414 30.7721 107.784 33.0956 106.87 35.7591C105.9 38.536 101.961 41.3128 97.1083 42.3329C97.6221 43.4663 98.7638 44.2597 100.876 44.2597C103.616 44.2597 107.898 42.2196 110.296 38.8193L111.609 39.8961ZM97.1654 38.4226C96.9941 39.046 96.8228 39.5561 96.7657 40.1228C103.788 38.6493 104.416 33.3223 102.075 33.3223C100.02 33.379 97.9075 36.1558 97.1654 38.4226Z"
                      fill="#05221A"
                    />
                    <path
                      d="M138.783 23.2915C139.811 20.3447 138.783 18.1912 135.872 18.1912C132.675 18.1912 130.334 20.628 128.85 24.8783L124.625 37.0058C123.54 40.066 121.657 42.2195 118.916 43.5796H132.503C135.986 43.5796 137.813 41.9362 139.525 40.2361L140.896 41.2561C139.183 45.2231 136.043 47.4899 131.305 47.4899H110.581L111.209 45.6764C113.95 45.2231 118.06 42.7296 120.115 36.8358L124.111 25.2183C125.71 20.5714 130.049 15.641 136.728 15.641C142.151 15.641 143.864 19.3246 142.494 23.4616C141.124 27.4285 136.956 31.7921 130.22 33.8323L129.478 31.6221C134.73 29.6387 137.756 26.2384 138.783 23.2915Z"
                      fill="#05221A"
                    />
                    <path
                      d="M161.79 39.8961C158.936 43.9764 153.74 47.9433 149.002 47.9433C143.579 47.9433 141.581 43.2396 143.179 38.8193C144.835 34.1157 148.831 30.7721 153.398 30.7721C156.595 30.7721 157.965 33.0956 157.052 35.7591C156.081 38.536 152.142 41.3128 147.289 42.3329C147.803 43.4663 148.945 44.2597 151.057 44.2597C153.798 44.2597 158.079 42.2196 160.477 38.8193L161.79 39.8961ZM147.347 38.4226C147.175 39.046 147.004 39.5561 146.947 40.1228C153.969 38.6493 154.597 33.3223 152.256 33.3223C150.258 33.379 148.089 36.1558 147.347 38.4226Z"
                      fill="#05221A"
                    />
                    <path
                      d="M172.751 39.896C170.239 43.5796 164.816 47.9432 160.991 47.9432C158.536 47.9432 157.794 45.7331 159.05 42.1628L161.961 33.8323H159.507L160.42 31.2821H162.875L165.101 24.8783H169.212L166.985 31.1688H171.438L170.525 33.7189H166.072L162.932 42.7296C162.532 43.863 163.046 44.203 163.617 44.203C165.843 44.203 169.668 41.2561 171.324 38.7626L172.751 39.896Z"
                      fill="#05221A"
                    />
                    <path
                      d="M183.712 39.896C181.2 43.5796 175.777 47.9432 171.952 47.9432C169.497 47.9432 168.755 45.7331 170.011 42.1628L172.922 33.8323H170.468L171.381 31.2821H173.836L176.062 24.8783H180.173L177.889 31.1688H182.342L181.429 33.7189H176.976L173.836 42.7296C173.436 43.863 173.95 44.203 174.521 44.203C176.747 44.203 180.572 41.2561 182.228 38.7626L183.712 39.896Z"
                      fill="#05221A"
                    />
                    <path
                      d="M199.811 39.8961C196.957 43.9764 191.762 47.9433 187.023 47.9433C181.6 47.9433 179.602 43.2396 181.2 38.8193C182.856 34.1157 186.852 30.7721 191.419 30.7721C194.616 30.7721 195.986 33.0956 195.073 35.7591C194.102 38.536 190.163 41.3128 185.311 42.3329C185.824 43.4663 186.966 44.2597 189.079 44.2597C191.819 44.2597 196.1 42.2196 198.498 38.8193L199.811 39.8961ZM185.368 38.4226C185.196 39.046 185.025 39.5561 184.968 40.1228C191.99 38.6493 192.618 33.3223 190.277 33.3223C188.222 33.379 186.11 36.1558 185.368 38.4226Z"
                      fill="#05221A"
                    />
                    <path
                      d="M211.857 34.739C211.286 36.4391 209.688 38.3659 207.975 39.6127H205.977C207.176 38.2526 207.804 37.2325 208.146 36.2691C208.546 35.079 208.146 34.3423 207.461 34.3423C206.605 34.3423 204.778 35.1357 202.209 39.046L199.298 47.3766H195.187L200.782 31.1121H204.892L203.693 34.6257C205.749 31.9622 207.69 30.6587 209.802 30.6587C211.914 30.6587 212.542 32.5855 211.857 34.739Z"
                      fill="#05221A"
                    />
                  </g>
                  <defs>
                    <clipPath id="clip0">
                      <rect width="242" height="48" fill="white" />
                    </clipPath>
                  </defs>
                </svg>
              </div>
            </Link>
          </Menu.Item>

          <SubMenu
            title={
              <>
                <Avatar
                  size="medium"
                  className={"UserAvatar"}
                  onClick={() => setVisibleDrawer(true)}
                >
                  <svg
                    width="24"
                    height="24"
                    viewBox="0 0 24 24"
                    fill="none"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M12.4 21C11.5163 21 10.8 20.2837 10.8 19.4H14C14 20.2837 13.2837 21 12.4 21ZM18.8 18.6H6V17L7.6 16.2V11.8C7.6 9.0304 8.7368 7.2344 10.8 6.744V5H13.2C12.6784 5.69115 12.3974 6.5341 12.4 7.4C12.4 7.6011 12.4149 7.80193 12.4448 8.0008H12.4C11.4239 7.93758 10.4824 8.37412 9.9 9.16C9.40204 9.94765 9.15771 10.8691 9.2 11.8V17H15.6V11.8C15.6 11.6312 15.5944 11.4688 15.5832 11.32C16.1124 11.4293 16.6581 11.4312 17.188 11.3256C17.1968 11.4944 17.2 11.6552 17.2 11.8056V16.2L18.8 17V18.6ZM16.4 9.8C15.9166 9.80058 15.4444 9.65471 15.0456 9.3816C14.103 8.73727 13.7449 7.51808 14.1892 6.46632C14.6335 5.41456 15.7573 4.82143 16.8763 5.04803C17.9954 5.27463 18.7999 6.25824 18.8 7.4C18.8 8.72548 17.7255 9.8 16.4 9.8Z"
                      fill="#F1F6F9"
                    />
                  </svg>
                </Avatar>
              </>
            }
            style={{ float: "right" }}
          />
          <SubMenu
            title={
              <>
                {props.user && props.user.name}
                <Avatar size="medium" className={"UserAvatar"}>
                  <svg
                    width="16"
                    height="17"
                    viewBox="0 0 16 17"
                    fill="none"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M2.12968 16.5477H0.452393V15.7091C0.45609 12.4684 3.08223 9.84227 6.32288 9.83858H9.67745C12.9181 9.84227 15.5442 12.4684 15.5479 15.7091V16.5477H13.8707V15.7091C13.8679 13.3944 11.9921 11.5186 9.67745 11.5159H6.32288C4.00819 11.5186 2.13245 13.3944 2.12968 15.7091V16.5477ZM8.00016 8.99994C5.68432 8.99994 3.80696 7.12257 3.80696 4.80673C3.80696 2.49089 5.68432 0.613525 8.00016 0.613525C10.316 0.613525 12.1934 2.49089 12.1934 4.80673C12.1906 7.12142 10.3149 8.99716 8.00016 8.99994ZM8.00016 2.29081C6.61066 2.29081 5.48424 3.41722 5.48424 4.80673C5.48424 6.19624 6.61066 7.32265 8.00016 7.32265C9.38967 7.32265 10.5161 6.19624 10.5161 4.80673C10.5161 3.41722 9.38967 2.29081 8.00016 2.29081Z"
                      fill="#F1F6F9"
                    />
                  </svg>
                </Avatar>
              </>
            }
            style={{ float: "right" }}
          >
            <Menu.Item
              key="profile"
              onClick={() => props.history.push("/profile")}
            >
              Profile
            </Menu.Item>
            {user?.role === "ADMIN" && (
              <Menu.Item
                key="questions-managment"
                onClick={() => props.history.push("/add-questions")}
              >
                Questions Admin
              </Menu.Item>
            )}
            <Menu.Item onClick={(e) => handleLogOut(e)} key="LogOut">
              Sign Out
            </Menu.Item>
          </SubMenu>
        </Menu>
      </Header>
      <Content className={props.contentClass || "Content"}>
        <div>
          {visibleDrawer && (
            <Drawer
              width={520}
              className="notifications-drawer"
              title="Notifications"
              placement="right"
              closable={false}
              onClose={() => setVisibleDrawer(false)}
              visible={() => setVisibleDrawer(true)}
            >
              <p>No new notifications.</p>
            </Drawer>
          )}
          {props.children}
        </div>
      </Content>
      <Footer style={{ textAlign: "center" }}>
        Copyright 2020 - Future Letter
      </Footer>
    </Layout>
  );
};

const mapStateToProps = (state) => {
  return {
    user: state.user.currentUser,
    loggedIn: state.auth.loggedIn,
  };
};

const mapDispatchToProps = (dispatch) => {
  // return bindActionCreators(
  //   {
  //     removeAuthUser: actions.removeAuthUser,
  //     setFirstAuthState: actions.setFirstAuthState,
  //     logOut: actions.logOut,
  //   },
  //   dispatch
  // );
};

LoggedLayout.propTypes = {
  user: PropTypes.object,
  loggedIn: PropTypes.bool.isRequired,
  removeAuthUser: PropTypes.func.isRequired,
  setFirstAuthState: PropTypes.func.isRequired,
  logOut: PropTypes.func.isRequired,
};

const connectedLoggedLayout = connect(
  mapStateToProps,
  mapDispatchToProps
)(LoggedLayout);

export default withRouter(connectedLoggedLayout);
